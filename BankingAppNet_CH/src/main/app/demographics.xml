<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw" xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd">
    <http:listener-config name="Demographics_HTTP_Listener" host="0.0.0.0" port="${http.port.demographics}" doc:name="HTTP Listener Configuration"/>
    <db:mysql-config name="MySQL_Configuration" host="localhost" port="3306" user="root" database="b2_test_db" doc:name="MySQL Configuration"/>
    <db:derby-config name="Derby_Configuration" url="${jdbc.derby.url}" doc:name="Derby Configuration"/>
    <flow name="demographicsFlowAll">
        <http:listener config-ref="Demographics_HTTP_Listener" path="CustomerDemographicsService/soap/all" doc:name="HTTP"/>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <cxf:proxy-service payload="body" doc:name="CXF"  namespace="http://Customer360/XSD/CustomerDemographics.xsd" port="CustomerDemographicsPortAll" service="CustomerDemographicsServiceAll" bindingId="CustomerDemographicsSoapBinding" soapVersion="1.2" wsdlLocation="${cust.demographics.wsdl}"/>
        <db:select config-ref="Derby_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[select * from customer_demographics]]></db:parameterized-query>
        </db:select>
        <dw:transform-message metadata:id="6f9bb875-ee0c-4f7e-a445-e9a0a578da96" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://Customer360/XSD/CustomerDemographics.xsd
---
{
	ns0#RESP: {
		ns0#CustomerRecordList: {
			(payload map ((payload01 , indexOfPayload01) -> {
				ns0#CustomerRecord: {
					ns0#cust_id: payload01.cust_id,
					ns0#first_name: payload01.first_name,
					ns0#last_name: payload01.last_name,
					ns0#address: payload01.address,
					ns0#city: payload01.city,
					ns0#province: payload01.province,
					ns0#country: payload01.country,
					ns0#age: payload01.age,
					ns0#married: payload01.married
				}
			}))
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
        <logger message="DB Query result  All : #[payload]" level="INFO" doc:name="Logger"/>
    </flow>
    <flow name="demographicsFlowSingle">
        <http:listener config-ref="Demographics_HTTP_Listener" path="CustomerDemographicsService/soap" doc:name="HTTP"/>
        <byte-array-to-string-transformer mimeType="application/xml" doc:name="Byte Array to String"/>
        <cxf:proxy-service payload="body" doc:name="CXF"  namespace="http://Customer360/XSD/CustomerDemographics.xsd" port="CustomerDemographicsPort" service="CustomerDemographicsService" bindingId="CustomerDemographicsSoapBinding" soapVersion="1.2" wsdlLocation="${cust.demographics.wsdl}"/>
        <dw:transform-message metadata:id="f7828d92-9373-4288-8a33-a5ece7908c86" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://Customer360/XSD/CustomerDemographics.xsd
---
payload.ns0#REQ.ns0#cust_id]]></dw:set-payload>
            <dw:set-variable variableName="_cust_id"><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://Customer360/XSD/CustomerDemographics.xsd
---

	payload.ns0#REQ.ns0#cust_id
]]></dw:set-variable>
        </dw:transform-message>
        <logger message="Incoming CustId : #[flowVars._cust_id]" level="INFO" doc:name="Logger_single"/>
        <db:select config-ref="Derby_Configuration_2" doc:name="Database">
            <db:parameterized-query><![CDATA[select * from customer_demographics where cust_id=#[flowVars._cust_id]]]></db:parameterized-query>
        </db:select>
        <dw:transform-message metadata:id="9cebde72-3856-47eb-9e33-02990b62709d" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://Customer360/XSD/CustomerDemographics.xsd
---
{
	ns0#RESP: {
		ns0#CustomerRecordList: {
			(payload map ((payload01 , indexOfPayload01) -> {
				ns0#CustomerRecord: {
					ns0#cust_id: payload01.cust_id,
					ns0#first_name: payload01.first_name,
					ns0#last_name: payload01.last_name,
					ns0#address: payload01.address,
					ns0#city: payload01.city,
					ns0#province: payload01.province,
					ns0#country: payload01.country,
					ns0#age: payload01.age,
					ns0#married: payload01.married
				}
			}))
		}
	}
}]]></dw:set-payload>
        </dw:transform-message>
        <byte-array-to-string-transformer mimeType="application/xml" doc:name="Byte Array to String"/>
        <logger message="DB Query result: #[payload]" level="INFO" doc:name="Logger"/>
        
        
    </flow>
    <flow name="demographicsFlowCreate">
        <http:listener config-ref="Demographics_HTTP_Listener" path="CustomerDemographicsService/soap/create" doc:name="HTTP"/>
        <byte-array-to-string-transformer doc:name="Byte Array to String"/>
         <cxf:proxy-service payload="body" doc:name="CXF"  namespace="http://Customer360/XSD/CustomerDemographics.xsd" port="CustomerDemographicsPortCreateCustomer" service="CustomerDemographicsServiceCreateCustomer" bindingId="CustomerDemographicsSoapBinding" soapVersion="1.2" wsdlLocation="${cust.demographics.wsdl}"/>
        <dw:transform-message metadata:id="8f5aa1e7-a7da-4c8c-948a-af7e01fa3fe7" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/java
%namespace ns0 http://Customer360/XSD/CustomerDemographics.xsd
---
{
	address: payload.ns0#CustomerRecord.ns0#address,
	age: payload.ns0#CustomerRecord.ns0#age as :number,
	city: payload.ns0#CustomerRecord.ns0#city,
	country: payload.ns0#CustomerRecord.ns0#country,
	custId: payload.ns0#CustomerRecord.ns0#cust_id,
	firstName: payload.ns0#CustomerRecord.ns0#first_name,
	lastName: payload.ns0#CustomerRecord.ns0#last_name,
	married: payload.ns0#CustomerRecord.ns0#married,
	province: payload.ns0#CustomerRecord.ns0#province
} as :object {
	class : "com.coast.CustomerDemographicsRecord"
}]]></dw:set-payload>
        </dw:transform-message>
        <logger message="Creating customer: #[payload.custId]" level="INFO" doc:name="Logger"/>
        <db:insert config-ref="Derby_Configuration" doc:name="Database">
            <db:parameterized-query><![CDATA[insert into customer_demographics(cust_id,first_name,last_name,address,city,province,country,age,married) values(#[payload.custId],#[payload.firstName],#[payload.lastName],#[payload.address],#[payload.city],#[payload.province],#[payload.country],#[payload.age],'YES')]]></db:parameterized-query>
        </db:insert>
        <dw:transform-message metadata:id="2fcdd0fd-21b8-453d-842c-a9b4adf9f297" doc:name="Transform Message">
            <dw:set-payload><![CDATA[%dw 1.0
%output application/xml
%namespace ns0 http://Customer360/XSD/CustomerDemographics.xsd
---
{
	ns0#REQ: {
		ns0#cust_id: flowVars."_cust_id"
	}
}]]></dw:set-payload>
        </dw:transform-message>
  
    </flow>
</mule>
